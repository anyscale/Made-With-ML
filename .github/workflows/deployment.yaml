name: deployment
on:
  workflow_dispatch:  # for ability to manually trigger workflow
  push:
    branches:
    - main
permissions: write-all

jobs:
  setup:
    runs-on: ubuntu-22.04
    outputs:  # outputs (that we'll reuse in other jobs)
      S3_BUCKET: ${{ steps.vars.outputs.S3_BUCKET }}
      PR_PATH: ${{ steps.vars.outputs.PR_PATH }}
      COMMIT_PATH: ${{ steps.vars.outputs.COMMIT_PATH }}
    steps:
      - name: Set global vars
        id: vars
        run: |
          export REPO=$(echo $GITHUB_REPOSITORY | tr '[:upper:]' '[:lower:]')
          PR_NUM=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/$REPO/commits/$GITHUB_SHA/pulls" \
            | jq -r '.[0].number')
          export S3_BUCKET=s3://madewithml
          export PR_PATH=$S3_BUCKET/${{ github.actor }}/pull_requests/$PR_NUM
          export COMMIT_PATH=$PR_PATH/commits/${{ github.event.pull_request.head.sha }}
          echo "S3_BUCKET=$S3_BUCKET" >> $GITHUB_OUTPUT
          echo "PR_PATH=$PR_PATH" >> $GITHUB_OUTPUT
          echo "COMMIT_PATH=$COMMIT_PATH" >> $GITHUB_OUTPUT
          echo "CLUSTER_ENV_NAME=madewithml-cluster-env" >> $GITHUB_OUTPUT


  serve-model:
    runs-on: ubuntu-22.04
    if: ${{ github.event_name == 'push' }}
    needs: setup
    outputs:  # outputs (that we'll reuse in other jobs)
      PR_NUM: ${{ steps.vars.outputs.RUN_ID }}
    steps:

      # Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.IAM_ROLE }}
          role-session-name: s3access
          aws-region: ${{ secrets.AWS_REGION }}

      # Set up dependencies
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10.11'
          cache: 'pip'
      - run: python3 -m pip install anyscale==0.5.116 typer==0.7.0

      # Get run ID
      - name: Get run ID
        run: |
          export RUN_ID_FILE=run_id.txt
          aws s3 cp ${{ needs.setup.outputs.PR_PATH }}/$RUN_ID_FILE $RUN_ID_FILE
          echo "RUN_ID=$(cat $RUN_ID_FILE)" >> "$GITHUB_ENV"

      # Serve model
      - name: Serve model
        run: |
          export ANYSCALE_HOST=${{ secrets.ANYSCALE_HOST }}
          export ANYSCALE_CLI_TOKEN=${{ secrets.ANYSCALE_CLI_TOKEN }}
          python deploy/utils.py rollout-service \
            --yaml-config-fp deploy/services/serve.yaml \
            --cluster-env-name ${{ needs.setup.outputs.CLUSTER_ENV_NAME }} \
            --run-id ${{ env.RUN_ID }}
