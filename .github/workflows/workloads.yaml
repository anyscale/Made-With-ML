name: workloads
on:
  workflow_dispatch:  # for ability to manually trigger workflow
  pull_request:
    branches:
    - main  # triggered on PRs to the main branch
permissions: write-all

jobs:
  setup:
    runs-on: ubuntu-22.04
    outputs:  # outputs (that we'll reuse in other jobs)
      CLUSTER_ENV_NAME: ${{ steps.vars.outputs.CLUSTER_ENV_NAME }}
      S3_BUCKET: ${{ steps.vars.outputs.S3_BUCKET }}
    steps:
      - name: Set global vars
        id: vars
        run: |
          echo "CLUSTER_ENV_NAME=madewithml-cluster-env" >> "$GITHUB_OUTPUT"
          echo "S3_BUCKET=s3://madewithml" >> "$GITHUB_OUTPUT"

  test-code:
    runs-on: ubuntu-22.04
    needs: setup
    steps:

      # Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.IAM_ROLE }}
          role-session-name: s3access
          aws-region: ${{ secrets.AWS_REGION }}

      # Set up dependencies
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10.11'
          cache: 'pip'
      - run: python -m pip install -e ".[deploy]" --no-cache-dir

      # Test code
      - name: Test code
        run: |
          echo "Testing code"

  test-data:
    runs-on: ubuntu-22.04
    needs: setup
    steps:

      # Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.IAM_ROLE }}
          role-session-name: s3access
          aws-region: ${{ secrets.AWS_REGION }}

      # Set up dependencies
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10.11'
          cache: 'pip'
      - run: python -m pip install -e ".[deploy]" --no-cache-dir

      # Test data
      - name: Test data
        run: |
          echo "Testing data"

  train-model:
    runs-on: ubuntu-22.04
    needs: [setup, test-code, test-data]
    steps:

      # Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.IAM_ROLE }}
          role-session-name: s3access
          aws-region: ${{ secrets.AWS_REGION }}

      # Set up dependencies
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10.11'
          cache: 'pip'
      - run: python -m pip install -e ".[deploy]" --no-cache-dir

      # Train our model (could also tune)
      - name: Train model
        run: |
          echo "Training model"

      # Get run ID
      - name: Get run ID
        run: |
          echo "Run ID:"

  evaluate-model:
    runs-on: ubuntu-22.04
    needs: [setup, train-model]
    steps:

      # Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.IAM_ROLE }}
          role-session-name: s3access
          aws-region: ${{ secrets.AWS_REGION }}

      # Set up dependencies
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10.11'
          cache: 'pip'
      - run: python -m pip install -e ".[deploy]" --no-cache-dir

      # Evaluate our model
      - name: Evaluate model
        run: |
          export ANYSCALE_HOST=${{ secrets.ANYSCALE_HOST }}
          export ANYSCALE_CLI_TOKEN=${{ secrets.ANYSCALE_CLI_TOKEN }}
          python deploy/utils.py submit-job \
            --yaml-config-fp deploy/jobs/evaluate.yaml \
            --cluster-env-name ${{ needs.setup.outputs.CLUSTER_ENV_NAME }} \
            --run-id "" \
            --commit-id ${{ github.event.pull_request.head.sha }}

      # Read and comment results on PR
      - name: Read results from S3
        run: |
          export EVAL_RESULTS_FILE_NAME=evaluation_results
          results_path=${{ needs.setup.outputs.S3_BUCKET }}/${{ github.actor }}/results/${{ github.event.pull_request.head.sha }}
          aws s3 cp $results_path/${EVAL_RESULTS_FILE_NAME}.json ${EVAL_RESULTS_FILE_NAME}.json
      - run: python deploy/utils.py json-to-markdown --json-fp ${EVAL_RESULTS_FILE_NAME}.json --markdown-fp ${EVAL_RESULTS_FILE_NAME}.md
      - name: Comment results on PR
        uses: thollander/actions-comment-pull-request@v2
        with:
          filePath: ${EVAL_RESULTS_FILE_NAME}.md

  test-model:
    runs-on: ubuntu-22.04
    needs: [setup, train-model]
    steps:

      # Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.IAM_ROLE }}
          role-session-name: s3access
          aws-region: ${{ secrets.AWS_REGION }}

      # Set up dependencies
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10.11'
          cache: 'pip'
      - run: python -m pip install -e ".[deploy]" --no-cache-dir

      # Test model
      - name: Test model
        run: echo "Test model"

  compare-to-prod:
    runs-on: ubuntu-22.04
    needs: [setup, evaluate-model, test-model]
    steps:

      # Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.IAM_ROLE }}
          role-session-name: s3access
          aws-region: ${{ secrets.AWS_REGION }}

      # Set up dependencies
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10.11'
          cache: 'pip'
      - run: python -m pip install -e ".[deploy]" --no-cache-dir

      # Compare model to production
      - name: Compare model
        run: echo "Compare model"
